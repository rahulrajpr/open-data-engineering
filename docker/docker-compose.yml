services:
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongodb_data:/data/db

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data

  trino:
    image: trinodb/trino
    container_name: trino
    ports:
      - "${TRINO_PORT}:8080"
    depends_on:
      - postgres

  spark:
    image: bitnami/spark:latest
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "${SPARK_PORT}:8080"
    volumes:
      - ./spark:/bitnami/spark

  superset:
    image: apache/superset
    container_name: superset
    ports:
      - "${SUPERSET_PORT}:8088"
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_ADMIN_USER: ${SUPERSET_ADMIN_USER}
      SUPERSET_ADMIN_PASSWORD: ${SUPERSET_ADMIN_PASSWORD}
      SUPERSET_ADMIN_EMAIL: ${SUPERSET_ADMIN_EMAIL}
    volumes:
      - ./config/superset_config.py:/app/pythonpath/superset_config.py
    depends_on:
      - postgres
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"

  airflow-webserver:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-webserver
    command: webserver
    ports:
      - "${AIRFLOW_PORT}:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD}
      _AIRFLOW_WWW_USER_EMAIL: ${AIRFLOW_EMAIL}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-scheduler
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-worker:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-worker
    command: celery worker
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-triggerer:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-triggerer
    command: triggerer
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-flower:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-flower
    command: celery flower
    ports:
      - "5555:5555"
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - postgres
      - redis

  druid-zookeeper:
    image: zookeeper:3.7
    container_name: druid-zookeeper
    ports:
    - "${DRUID_ZK_PORT}:2181"

  druid-postgres:
    image: postgres:13
    container_name: druid-postgres
    environment:
      POSTGRES_DB: druid
      POSTGRES_USER: druid
      POSTGRES_PASSWORD: druid
    ports:
      - "${DRUID_POSTGRES_PORT}:5432"
    volumes:
      - druid_postgres_data:/var/lib/postgresql/data

  druid-coordinator:
    image: imply/druid:2023.09.0
    container_name: druid-coordinator
    depends_on:
      - druid-zookeeper
      - druid-postgres
    ports:
      - "${DRUID_COORDINATOR_PORT}:8081"
    environment:
      - DRUID_NODE_TYPE=coordinator
    volumes:
      - ./druid/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties

  druid-overlord:
    image: imply/druid:2023.09.0
    container_name: druid-overlord
    depends_on:
      - druid-zookeeper
      - druid-postgres
    ports:
      - "${DRUID_OVERLORD_PORT}:8090"
    environment:
      - DRUID_NODE_TYPE=overlord
    volumes:
      - ./druid/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties

  druid-broker:
    image: imply/druid:2023.09.0
    container_name: druid-broker
    depends_on:
      - druid-zookeeper
      - druid-postgres
    ports:
      - "${DRUID_BROKER_PORT}:8082"
    environment:
      - DRUID_NODE_TYPE=broker
    volumes:
      - ./druid/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties

  druid-historical:
    image: imply/druid:2023.09.0
    container_name: druid-historical
    depends_on:
      - druid-zookeeper
      - druid-postgres
    ports:
      - "${DRUID_HISTORICAL_PORT}:8083"
    environment:
      - DRUID_NODE_TYPE=historical
    volumes:
      - ./druid/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties

  druid-middlemanager:
    image: imply/druid:2023.09.0
    container_name: druid-middlemanager
    depends_on:
      - druid-zookeeper
      - druid-postgres
    ports:
      - "${DRUID_MIDDLEMANAGER_PORT}:8091"
    environment:
      - DRUID_NODE_TYPE=middleManager
    volumes:
      - ./druid/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties

  druid-router:
    image: imply/druid:2023.09.0
    container_name: druid-router
    depends_on:
      - druid-broker
      - druid-coordinator
    ports:
      - "${DRUID_ROUTER_PORT}:8888"
    environment:
      - DRUID_NODE_TYPE=router
    volumes:
      - ./druid/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties


volumes:
  pgdata:
  mongodb_data:
  minio_data:
  airbyte_db_data:
  airbyte_temporal_data:
  druid_postgres_data:
