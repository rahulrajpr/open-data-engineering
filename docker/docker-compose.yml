version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongodb_data:/data/db

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data

  trino:
    image: trinodb/trino
    container_name: trino
    ports:
      - "${TRINO_PORT}:8080"
    depends_on:
      - postgres

  spark:
    image: bitnami/spark:latest
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "${SPARK_PORT}:8080"
    volumes:
      - ./spark:/bitnami/spark

  superset:
    image: apache/superset
    container_name: superset
    ports:
      - "${SUPERSET_PORT}:8088"
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_ADMIN_USER: ${SUPERSET_ADMIN_USER}
      SUPERSET_ADMIN_PASSWORD: ${SUPERSET_ADMIN_PASSWORD}
      SUPERSET_ADMIN_EMAIL: ${SUPERSET_ADMIN_EMAIL}
    volumes:
      - ./config/superset_config.py:/app/pythonpath/superset_config.py
    depends_on:
      - postgres

  airbyte-temporal:
    image: temporalio/auto-setup:1.20.2
    container_name: airbyte-temporal
    ports:
      - "7233:7233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - DB_NAME=temporal
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=airbyte-temporal-db
      - DYNAMIC_CONFIG_FILE_PATH=/etc/temporal/config/dynamicconfig/development.yaml
    volumes:
      - ./config:/etc/temporal/config
    depends_on:
      - airbyte-temporal-db
    command: ["temporal-server", "start-dev"]


  airbyte-temporal-db:
    image: postgres:13
    container_name: airbyte-temporal-db
    environment:
      - POSTGRES_USER=temporal
      - POSTGRES_PASSWORD=temporal
      - POSTGRES_DB=temporal
    ports:
      - "5435:5432"
    volumes:
      - airbyte_temporal_data:/var/lib/postgresql/data

  airbyte-db:
    image: postgres:13
    container_name: airbyte-db
    environment:
      POSTGRES_USER: ${AIRBYTE_DATABASE_USER}
      POSTGRES_PASSWORD: ${AIRBYTE_DATABASE_PASSWORD}
      POSTGRES_DB: ${AIRBYTE_DATABASE_DB}
    ports:
      - "${AIRBYTE_DATABASE_PORT}:5432"
    volumes:
      - airbyte_db_data:/var/lib/postgresql/data

  airbyte-server:
    image: airbyte/server:${AIRBYTE_VERSION}
    container_name: airbyte-server
    ports:
      - "${AIRBYTE_PORT}:8000"
    environment:
      - AIRBYTE_VERSION=${AIRBYTE_VERSION}
      - AIRBYTE_WORKSPACE_ROOT=${AIRBYTE_WORKSPACE_ROOT}
      - DATABASE_USER=${AIRBYTE_DATABASE_USER}
      - DATABASE_PASSWORD=${AIRBYTE_DATABASE_PASSWORD}
      - DATABASE_DB=${AIRBYTE_DATABASE_DB}
      - DATABASE_PORT=${AIRBYTE_DATABASE_PORT}
      - DATABASE_HOST=airbyte-db
      - CONFIG_DATABASE_USER=${AIRBYTE_DATABASE_USER}
      - CONFIG_DATABASE_PASSWORD=${AIRBYTE_DATABASE_PASSWORD}
      - CONFIG_DATABASE_URL=jdbc:postgresql://${AIRBYTE_DATABASE_USER}:${AIRBYTE_DATABASE_PASSWORD}@airbyte-db:${AIRBYTE_DATABASE_PORT}/${AIRBYTE_DATABASE_DB}
      - DATABASE_URL=${AIRBYTE_DATABASE_URL} 
      - SECRETS_PERSISTENCE=${AIRBYTE_SECRETS_PERSISTENCE}
    depends_on:
      - airbyte-db
    volumes:
      - ./airbyte_data:/data

  airbyte-worker:
    image: airbyte/worker:${AIRBYTE_VERSION}
    container_name: airbyte-worker
    environment:
      - AIRBYTE_VERSION=${AIRBYTE_VERSION}
      - AIRBYTE_WORKSPACE_ROOT=${AIRBYTE_WORKSPACE_ROOT}
      - DATABASE_USER=${AIRBYTE_DATABASE_USER}
      - DATABASE_PASSWORD=${AIRBYTE_DATABASE_PASSWORD}
      - DATABASE_DB=${AIRBYTE_DATABASE_DB}
      - DATABASE_PORT=${AIRBYTE_DATABASE_PORT}
      - DATABASE_HOST=airbyte-db
      - CONFIG_DATABASE_USER=${AIRBYTE_DATABASE_USER}
      - CONFIG_DATABASE_PASSWORD=${AIRBYTE_DATABASE_PASSWORD}
      - CONFIG_DATABASE_URL=jdbc:postgresql://${AIRBYTE_DATABASE_USER}:${AIRBYTE_DATABASE_PASSWORD}@airbyte-db:${AIRBYTE_DATABASE_PORT}/${AIRBYTE_DATABASE_DB}
      - DATABASE_URL=${AIRBYTE_DATABASE_URL} 
      - airbyte.local.root=${AIRBYTE_LOCAL_ROOT}
      - SECRETS_PERSISTENCE=${AIRBYTE_SECRETS_PERSISTENCE}
    depends_on:
      - airbyte-db
    volumes:
      - ./airbyte_data:/data

  airbyte-bootloader:
    image: airbyte/bootloader:${AIRBYTE_VERSION}
    container_name: airbyte-bootloader
    environment:
      - AIRBYTE_VERSION=${AIRBYTE_VERSION}
      - AIRBYTE_WORKSPACE_ROOT=${AIRBYTE_WORKSPACE_ROOT}
      - DATABASE_USER=${AIRBYTE_DATABASE_USER}
      - DATABASE_PASSWORD=${AIRBYTE_DATABASE_PASSWORD}
      - DATABASE_DB=${AIRBYTE_DATABASE_DB}
      - DATABASE_PORT=${AIRBYTE_DATABASE_PORT}
      - DATABASE_HOST=airbyte-db
      - CONFIG_DATABASE_USER=${AIRBYTE_DATABASE_USER}
      - CONFIG_DATABASE_PASSWORD=${AIRBYTE_DATABASE_PASSWORD}
      - CONFIG_DATABASE_URL=jdbc:postgresql://${AIRBYTE_DATABASE_USER}:${AIRBYTE_DATABASE_PASSWORD}@airbyte-db:${AIRBYTE_DATABASE_PORT}/${AIRBYTE_DATABASE_DB}
      - DATABASE_URL=${AIRBYTE_DATABASE_URL} 
      - SECRETS_PERSISTENCE=${AIRBYTE_SECRETS_PERSISTENCE}
    depends_on:
      - airbyte-db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"

  airflow-webserver:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-webserver
    command: webserver
    ports:
      - "${AIRFLOW_PORT}:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD}
      _AIRFLOW_WWW_USER_EMAIL: ${AIRFLOW_EMAIL}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-scheduler
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-worker:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-worker
    command: celery worker
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-triggerer:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-triggerer
    command: triggerer
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    depends_on:
      - postgres
      - redis

  airflow-flower:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow-flower
    command: celery flower
    ports:
      - "5555:5555"
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:${REDIS_PORT}/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - postgres
      - redis

volumes:
  pgdata:
  mongodb_data:
  minio_data:
  airbyte_db_data:
  airbyte_temporal_data:
