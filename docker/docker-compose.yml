version: '3.9'

services:

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongodb_data:/data/db

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data:/data

  trino:
    image: trinodb/trino
    container_name: trino
    ports:
      - "${TRINO_PORT}:8080"
    depends_on:
      - minio
      - postgres

  spark:
    image: bitnami/spark:latest
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "${SPARK_PORT}:4040"

  superset:
    image: apache/superset
    container_name: superset
    environment:
      SUPERSET_ADMIN_USER: ${SUPERSET_ADMIN_USER}
      SUPERSET_ADMIN_PASSWORD: ${SUPERSET_ADMIN_PASSWORD}
      SUPERSET_ADMIN_EMAIL: ${SUPERSET_ADMIN_EMAIL}
    ports:
      - "${SUPERSET_PORT}:8088"
    depends_on:
      - postgres

  airbyte-server:
    image: airbyte/server:${AIRBYTE_VERSION}
    container_name: airbyte-server
    ports:
      - "${AIRBYTE_PORT}:8000"
    environment:
      - AIRBYTE_ROLE=server
    depends_on:
      - airbyte-db

  airbyte-worker:
    image: airbyte/worker:${AIRBYTE_VERSION}
    container_name: airbyte-worker
    environment:
      - AIRBYTE_ROLE=worker
    depends_on:
      - airbyte-server
      - airbyte-db

  airbyte-db:
    image: postgres:13
    container_name: airbyte-db
    environment:
      POSTGRES_USER: ${AIRBYTE_DB_USER}
      POSTGRES_PASSWORD: ${AIRBYTE_DB_PASSWORD}
      POSTGRES_DB: ${AIRBYTE_DB_NAME}
    volumes:
      - airbyte_db_data:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.8.1-python3.10
    container_name: airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW_DB_URL}
    ports:
      - "${AIRFLOW_PORT}:8080"
    depends_on:
      - postgres
    volumes:
      - ./airflow/dags:/opt/airflow/dags

  druid:
    image: apache/druid:27.0.0
    container_name: druid
    ports:
      - "${DRUID_PORT}:8888"
    environment:
      - DRUID_XMX=2g
      - DRUID_XMS=2g
      - DRUID_MAXNEWSIZE=256m
    command: bin/start-micro-quickstart
    volumes:
      - druid_data:/opt/druid/var

  ranger-admin:
    image: apache/ranger:2.6.0
    container_name: ranger-admin
    environment:
      - DB_FLAVOR=MYSQL
      - SQL_CONNECTOR_JAR=/usr/share/java/mysql-connector-java.jar
      - RANGER_ADMIN_PASSWORD=${RANGER_ADMIN_PASSWORD}
      - RANGER_DB_ROOT_USER=${RANGER_DB_ROOT_USER}
      - RANGER_DB_ROOT_PASSWORD=${RANGER_DB_ROOT_PASSWORD}
      - RANGER_DB_USER=${RANGER_DB_USER}
      - RANGER_DB_PASSWORD=${RANGER_DB_PASSWORD}
      - MYSQL_HOST=ranger-mysql
    depends_on:
      - ranger-mysql
    ports:
      - "${RANGER_PORT}:6080"

  ranger-mysql:
    image: mysql:8
    container_name: ranger-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${RANGER_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=ranger
      - MYSQL_USER=${RANGER_DB_USER}
      - MYSQL_PASSWORD=${RANGER_DB_PASSWORD}
    volumes:
      - ranger_mysql_data:/var/lib/mysql

volumes:
  pgdata:
  mongodb_data:
  minio_data:
  airbyte_db_data:
  druid_data:
  ranger_mysql_data: